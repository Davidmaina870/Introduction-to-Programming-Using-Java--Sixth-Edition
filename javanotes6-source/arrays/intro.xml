<?xml version="1.0" encoding="UTF-8"?>


<intro>
<p><start><big>C</big>omputers get a lot of their power</start> from working
with <newword>data structures</newword>. A data structure is an
organized collection of related data. An object is a data structure, but this
type of data structure&mdash;consisting of a fairly small number of named instance
variables&mdash;is just the beginning. In many cases, programmers build
complicated data structures by hand, by linking objects together. We'll look at
these custom-built data structures in <localref href="recursion"/>. But there is one type of
data structure that is so important and so basic that it is built into every
programming language: the array.</p>

<p>An <newword>array</newword> is a data structure consisting of a
numbered list of items, where all the items are of the same type. In Java, the
items in an array are always numbered from zero up to some maximum value, which
is set when the array is created. For example, an array might contain 100
integers, numbered from zero to 99. The items in an array can belong to one of
Java's primitive types. They can also be references to objects, so that you
could, for example, make an array containing all the buttons in a 
GUI program.</p>

<p>This chapter discusses how arrays are created and used in Java. It also
covers the standard class <code>java.util.ArrayList</code>. An object of type
<classname>ArrayList</classname> is very similar to an array of <classname>Objects</classname>, but it can
grow to hold any number of items.</p>

</intro>